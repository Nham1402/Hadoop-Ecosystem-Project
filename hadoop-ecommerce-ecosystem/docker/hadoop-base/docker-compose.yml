version: "3.8"
x-env: &hadoop_env
  CORE_CONF_fs_defaultFS: "hdfs://namenode:8020"
  HDFS_CONF_dfs_replication: "2"
  YARN_CONF_yarn_log___aggregation___enable: "true"
  YARN_CONF_yarn_resourcemanager_hostname: "resourcemanager"

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.3.2-java11
    environment: *hadoop_env
    volumes:
      - nn-data:/hadoop/dfs/name
    ports:
      - "9870:9870"
    networks: [data-net]
    deploy:
      placement:
        constraints: [node.labels.hdfs.role == nn]

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.3.2-java11
    environment: *hadoop_env
    volumes:
      - dn-data:/hadoop/dfs/data
    networks: [data-net]
    deploy:
      mode: global
      placement:
        constraints: [node.labels.hdfs.role == dn]

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.3.2-java11
    environment: *hadoop_env
    ports:
      - "8088:8088"
    networks: [data-net]
    deploy:
      placement:
        constraints: [node.labels.yarn.role == rm]

  nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.3.2-java11
    environment: *hadoop_env
    networks: [data-net]
    deploy:
      mode: global
      placement:
        constraints: [node.labels.yarn.role == nm]

volumes:
  nn-data: { external: true }
  dn-data: { external: true }
networks:
  data-net: { external: true }

