# Prometheus configuration for Hadoop E-commerce Ecosystem
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'hadoop-ecommerce'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "rules/*.yml"
  - "alerts/*.yml"

# Scrape configuration
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Kubernetes API server
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - default
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Kubernetes nodes
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)

  # Kubernetes pods
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - hadoop-ecosystem
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Hadoop NameNode
  - job_name: 'hadoop-namenode'
    static_configs:
      - targets: ['hadoop-namenode:9870']
    metrics_path: '/jmx'
    params:
      qry: ['Hadoop:service=NameNode,name=*']
    scrape_interval: 30s

  # Hadoop DataNodes
  - job_name: 'hadoop-datanodes'
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
            - hadoop-ecosystem
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: hadoop-datanode
      - source_labels: [__address__]
        action: replace
        regex: ([^:]+)(?::\d+)?
        replacement: $1:9864
        target_label: __address__
    metrics_path: '/jmx'
    params:
      qry: ['Hadoop:service=DataNode,name=*']

  # YARN ResourceManager
  - job_name: 'yarn-resourcemanager'
    static_configs:
      - targets: ['yarn-resourcemanager:8088']
    metrics_path: '/jmx'
    params:
      qry: ['Hadoop:service=ResourceManager,name=*']
    scrape_interval: 30s

  # YARN NodeManagers
  - job_name: 'yarn-nodemanagers'
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
            - hadoop-ecosystem
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: yarn-nodemanager
      - source_labels: [__address__]
        action: replace
        regex: ([^:]+)(?::\d+)?
        replacement: $1:8042
        target_label: __address__
    metrics_path: '/jmx'
    params:
      qry: ['Hadoop:service=NodeManager,name=*']

  # Spark Master
  - job_name: 'spark-master'
    static_configs:
      - targets: ['spark-master:8080']
    metrics_path: '/metrics/master/prometheus'
    scrape_interval: 30s

  # Spark Workers
  - job_name: 'spark-workers'
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
            - hadoop-ecosystem
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: spark-worker
      - source_labels: [__address__]
        action: replace
        regex: ([^:]+)(?::\d+)?
        replacement: $1:8081
        target_label: __address__
    metrics_path: '/metrics/worker/prometheus'

  # Kafka
  - job_name: 'kafka'
    static_configs:
      - targets: ['kafka:9092']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Zookeeper
  - job_name: 'zookeeper'
    static_configs:
      - targets: ['zookeeper:2181']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # HBase Master
  - job_name: 'hbase-master'
    static_configs:
      - targets: ['hbase-master:16010']
    metrics_path: '/jmx'
    params:
      qry: ['Hadoop:service=HBase,name=Master,sub=Server']
    scrape_interval: 30s

  # HBase RegionServers
  - job_name: 'hbase-regionservers'
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
            - hadoop-ecosystem
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: hbase-regionserver
      - source_labels: [__address__]
        action: replace
        regex: ([^:]+)(?::\d+)?
        replacement: $1:16030
        target_label: __address__
    metrics_path: '/jmx'
    params:
      qry: ['Hadoop:service=HBase,name=RegionServer,sub=Server']

  # Airflow
  - job_name: 'airflow'
    static_configs:
      - targets: ['airflow-webserver:8080']
    metrics_path: '/admin/metrics/'
    scrape_interval: 60s

  # Node Exporter (for system metrics)
  - job_name: 'node-exporter'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - hadoop-ecosystem
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: node-exporter
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: metrics

  # cAdvisor (for container metrics)
  - job_name: 'cadvisor'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor